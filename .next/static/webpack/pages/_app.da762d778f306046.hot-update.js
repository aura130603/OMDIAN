"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./context/AuthContext.js":
/*!********************************!*\
  !*** ./context/AuthContext.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: () => (/* binding */ AuthContext),\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Check if user is logged in from localStorage\n            try {\n                if (true) {\n                    const savedUser = localStorage.getItem('omdian_user');\n                    if (savedUser) {\n                        setUser(JSON.parse(savedUser));\n                    }\n                }\n            } catch (error) {\n                console.error('Error loading user from localStorage:', error);\n            }\n            setLoading(false);\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    const login = async (username, password)=>{\n        try {\n            const response = await fetch('/api/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password\n                })\n            });\n            // Check if response is ok before trying to parse JSON\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('Response not ok:', response.status, errorText);\n                return {\n                    success: false,\n                    message: \"Server error: \".concat(response.status)\n                };\n            }\n            // Check if response has content before parsing JSON\n            const contentType = response.headers.get('content-type');\n            if (!contentType || !contentType.includes('application/json')) {\n                const responseText = await response.text();\n                console.error('Non-JSON response:', responseText);\n                return {\n                    success: false,\n                    message: 'Server mengembalikan respons yang tidak valid'\n                };\n            }\n            const data = await response.json();\n            if (data.success) {\n                setUser(data.user);\n                if (true) {\n                    localStorage.setItem('omdian_user', JSON.stringify(data.user));\n                }\n                return {\n                    success: true\n                };\n            } else {\n                return {\n                    success: false,\n                    message: data.message || 'Login gagal'\n                };\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            // If it's a network error\n            if (error.name === 'TypeError' && error.message.includes('fetch')) {\n                return {\n                    success: false,\n                    message: 'Tidak dapat terhubung ke server'\n                };\n            }\n            // If it's a JSON parsing error\n            if (error.name === 'SyntaxError') {\n                return {\n                    success: false,\n                    message: 'Server mengembalikan data yang tidak valid'\n                };\n            }\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const logout = ()=>{\n        setUser(null);\n        if (true) {\n            localStorage.removeItem('omdian_user');\n        }\n    };\n    const register = async (userData)=>{\n        try {\n            const response = await fetch('/api/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userData)\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Registration error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const getAllUsers = async ()=>{\n        if (!user || user.role !== 'admin') {\n            return [];\n        }\n        try {\n            const response = await fetch(\"/api/users?role=\".concat(user.role), {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            return data.success ? data.data : [];\n        } catch (error) {\n            console.error('Get users error:', error);\n            return [];\n        }\n    };\n    const getUserTrainingData = async function(userId) {\n        let year = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n        try {\n            let url = \"/api/training?userId=\".concat(userId, \"&role=\").concat(user.role);\n            if (year !== null) {\n                url += \"&year=\".concat(year);\n            }\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            return data.success ? data.data : [];\n        } catch (error) {\n            console.error('Get user training data error:', error);\n            return [];\n        }\n    };\n    const getAllTrainingData = async function() {\n        let year = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        if (!user || user.role !== 'admin') {\n            return [];\n        }\n        try {\n            let url = \"/api/training?userId=\".concat(user.id, \"&role=\").concat(user.role);\n            if (year !== null) {\n                url += \"&year=\".concat(year);\n            }\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            return data.success ? data.data : [];\n        } catch (error) {\n            console.error('Get all training data error:', error);\n            return [];\n        }\n    };\n    const addTrainingData = async (trainingData)=>{\n        try {\n            const response = await fetch('/api/training', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    userId: user.id,\n                    ...trainingData\n                })\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Add training data error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const updateTrainingData = async (trainingId, trainingData)=>{\n        try {\n            const response = await fetch('/api/training', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: trainingId,\n                    ...trainingData\n                })\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Update training data error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const deleteTrainingData = async (trainingId)=>{\n        try {\n            const response = await fetch(\"/api/training?id=\".concat(trainingId), {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Delete training data error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const addUser = async (userData)=>{\n        if (!user || user.role !== 'admin') {\n            return {\n                success: false,\n                message: 'Akses ditolak'\n            };\n        }\n        try {\n            const response = await fetch('/api/users', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    requestorRole: user.role,\n                    ...userData\n                })\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Add user error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const updateUser = async (userId, userData)=>{\n        if (!user || user.role !== 'admin') {\n            return {\n                success: false,\n                message: 'Akses ditolak'\n            };\n        }\n        try {\n            const response = await fetch('/api/users', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    requestorRole: user.role,\n                    id: userId,\n                    ...userData\n                })\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Update user error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const deleteUser = async (userId)=>{\n        if (!user || user.role !== 'admin') {\n            return {\n                success: false,\n                message: 'Akses ditolak'\n            };\n        }\n        try {\n            const response = await fetch(\"/api/users?id=\".concat(userId, \"&requestorRole=\").concat(user.role), {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Delete user error:', error);\n            return {\n                success: false,\n                message: 'Terjadi kesalahan koneksi'\n            };\n        }\n    };\n    const value = {\n        user,\n        loading,\n        login,\n        logout,\n        register,\n        getAllUsers,\n        getUserTrainingData,\n        getAllTrainingData,\n        addTrainingData,\n        updateTrainingData,\n        deleteTrainingData,\n        addUser,\n        updateUser,\n        deleteUser\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\rarac\\\\Downloads\\\\OMDIAN\\\\context\\\\AuthContext.js\",\n        lineNumber: 323,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./context/AuthContext.js\n"));

/***/ })

});